# This is a basic workflow to help you get started with Actions

name: CICD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
#    branches:
#    - main
##    - staging
##    - develop
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
#  pull_request:
#    branches:
#    - main
##    - staging
##    - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.20.0' # The Go version to download (if necessary) and use.
    
    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint
        
    # Run build of the application
    - name: Run build
      run: go build . 
      
#    # Run vet & lint on the code
#    - name: Run vet & lint
#      run: |
#        go vet .
#        golint .
    
#    # Run testing on the code
#    - name: Run testing
#      run: cd test && go test -v
    
#    # Send slack notification
#    - name: Send slack notification
#      uses: 8398a7/action-slack@v3
#      with:
#        status: ${{ job.status }}
#        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
#      env:
#        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
#      if: always() # Pick up events even if the job fails or is canceled.
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false

  # The "deploy" workflow
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [build] # Only run this workflow when "build" workflow succeeds
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }} # Only run this workflow if it is master branch on push event
    steps:
    - uses: actions/checkout@v2

    # Deploy to Docker registry
    - name: Deploy to Docker registry
      uses: docker/build-push-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: stelzer77/vz-mqtt-dbus-gateway
        tag_with_ref: true
